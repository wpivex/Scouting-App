<!DOCTYPE html>
<html>
<head>
	<% include ../partials/header.ejs %>
</head>

<body style="background: #A9B0B7">

<script src="bundle.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.qrcode/1.0/jquery.qrcode.min.js"></script>

<script type="module">
	import 'https://cdn.jsdelivr.net/npm/@pwabuilder/pwaupdate';
	const el = document.createElement('pwa-update');
	document.body.appendChild(el);
</script>
<meta 
		 name='viewport' 
		 content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' 
/>
	
<div class="jumbotron text-center">
	<div class="container">
		<h1>Scouting App</h1><br>
		<p>Record the events of the match for your assigned robot</p>
	</div>
</div>
<div class="container" style="text-align: center">
	<button type="button" class="collapsible">General</button>
	<div class="content"><br>
		<label for="fname">Match number: </label><br>
		<input type="number" id="match" name="match"><br><br>
		<div class="sideToggle toggle" id="side" style="background-color: #AC2B37; border-color: #cc3342;">Red</div><br>
		<label for="fname">Team name: </label><br>
		<input type="text" id="name" name="name"><br><br>
		<div class="robotToggle toggle" id="robot" style="background-color: #FFC300; border-color: #FFC300;">15 inch</div><br>
	</div><br><br>
	<button type="button" class="collapsible">Autonomous Scoring</button>
	<div class="content"><br>
		<label for="fname">Balls scored: </label><br>
		<input type="number" id="ballsAuto" name="ballsAuto" value=0>
		<button onclick="changeVal(this)" class="ba increment">+</button>
		<button onclick="changeVal(this)" class="ba decrement">-</button><br><br>
		<label for="fname">Goals scored: </label><br>
		<input type="number" id="goalsAuto" name="goalsAuto" value=0>
		<button onclick="changeVal(this)" class="ga increment">+</button>
		<button onclick="changeVal(this)" class="ga decrement">-</button><br><br>
		<label for="fname">Rows scored: </label><br>
		<input type="number" id="rowsAuto" name="rowsAuto" value=0>
		<button onclick="changeVal(this)" class="ra increment">+</button>
		<button onclick="changeVal(this)" class="ra decrement">-</button><br><br>
	</div><br><br>
	<button type="button" class="collapsible">Teleoperated Scoring</button>
	<div class="content"><br>
		<label for="fname">Balls scored: </label><br>
		<input type="number" id="ballsTeleop" name="ballsTeleop" value=0>
		<button onclick="changeVal(this)" class="bt increment">+</button>
		<button onclick="changeVal(this)" class="bt decrement">-</button><br><br>
		<label for="fname">Goals scored: </label><br>
		<input type="number" id="goalsTeleop" name="goalsTeleop" value=0>
		<button onclick="changeVal(this)" class="gt increment">+</button>
		<button onclick="changeVal(this)" class="gt decrement">-</button><br><br>
		<label for="fname">Rows scored: </label><br>
		<input type="number" id="rowsTeleop" name="rowsTeleop" value=0>
		<button onclick="changeVal(this)" class="rt increment">+</button>
		<button onclick="changeVal(this)" class="rt decrement">-</button><br><br>
		<div class="cycleToggle toggle" id="cycle" style="background-color: #FF0000; border-color: #ff3333;">Low cycle speed</div><br>
	</div><br><br>
	<button type="button" class="collapsible">Strategy</button>
	<div class="content"><br>
		<label for="fname">Fast drive:  </label>
		<input type="checkbox" id="fastDrive" name="fastDrive" value="1"><br><br>
		<label for="fname">Mobility: </label><br>
		<input type="range" min="0" max="10" id="mobility" name="mobility" list="steplist">
		<datalist id="steplist" style="--list-length: 11;"><!--
		  ---><option>0</option><!--
		  ---><option>1</option><!--
		  ---><option>2</option><!--
		  ---><option>3</option><!--
		  ---><option>4</option><!--
		  ---><option>5</option><!--
		  ---><option>6</option><!--
		  ---><option>7</option><!--
		  ---><option>8</option><!--
		  ---><option>9</option><!--
		  ---><option>10</option><!--
		---></datalist><br><br>
		<label for="fname">Driver comments: </label><br>
		<textarea id="comment" name="comment" rows="6" cols="40"></textarea><br><br>
		<label for="fname">General Strategy: </label><br>
		<select name="genStrat" id="genStrat">
			<option value="Strategy 1">Strategy 1</option>
			<option value="Strategy 2">Strategy 2</option>
			<option value="Strategy 3">Strategy 3</option>
		</select><br><br>
		<label for="fname"> Offense: </label><br>
		<br><br>
		<label for="fname"> Defense: </label><br>
		<br><br>
	</div><br><br><br>
	<button onclick="sendCurrent()" id="sendData" type="submit" value="SendCurrent">Send current data</button>
	<button onclick="sendCached()" id="sendData" type="submit" value="SendCached">Send cached data</button><br><br>
	<canvas id="canvas" width="100" height="100" style="display:none;"></canvas><br><br>
</div><br>

<script>
var coll = document.getElementsByClassName("collapsible");
var i;

for (i = 0; i < coll.length; i++) {
	coll[i].addEventListener("click", function() {
		this.classList.toggle("active");
		var content = this.nextElementSibling;
		if (content.style.display === "block") {
			content.style.display = "none";
		} else {
			content.style.display = "block";
		}
	});
}

//all buttons have changeVal class, increment and decrement classes, unique IDs
	function changeVal(element) {
		var change = (element.classList.contains("increment")) ? 1 : -1;
		if (element.classList.contains("ba")) {
			document.getElementById("ballsAuto").value = +document.getElementById("ballsAuto").value + change;
		} else if (element.classList.contains("ga")) {
			document.getElementById("goalsAuto").value = +document.getElementById("goalsAuto").value + change;
		} else if (element.classList.contains("ra")) {
			document.getElementById("rowsAuto").value = +document.getElementById("rowsAuto").value + change;
		} else if (element.classList.contains("bt")) {
			document.getElementById("ballsTeleop").value = +document.getElementById("ballsTeleop").value + change;
		} else if (element.classList.contains("gt")) {
			document.getElementById("goalsTeleop").value = +document.getElementById("goalsTeleop").value + change;
		} else if (element.classList.contains("rt")) {
			document.getElementById("rowsTeleop").value = +document.getElementById("rowsTeleop").value + change;
		}
	}
</script>

<script data-cfasync="false" type="text/javascript">
	function sendCurrent() {
		var date = new Date();
		var matchData = {
			"Timestamp ID": date.getTime(),
			"Match #": document.getElementById("match").value, 
			"Side": document.getElementById("side").style.backgroundColor =='rgb(172, 43, 55)' ? "RED" : "BLUE", 
			"Name": document.getElementById("name").value, 
			"Robot": document.getElementById("robot").style.backgroundColor =='rgb(255, 195, 0)' ? 15 : 24, 
			"Balls Scored (Auto)": document.getElementById("ballsAuto").value, 
			"Goals Scored (Auto)": document.getElementById("goalsAuto").value, 
			"Rows Scored (Auto)": document.getElementById("rowsAuto").value, 
			"Balls Scored (Teleop)": document.getElementById("ballsTeleop").value, 
			"Goals Scored (Teleop)": document.getElementById("goalsTeleop").value, 
			"Rows Scored (Teleop)": document.getElementById("rowsTeleop").value, 
			"Cycle Speed": document.getElementById("cycle").style.backgroundColor =='rgb(0, 128, 0)' ? "HIGH" : "LOW", 
			"Fast Drive?": document.getElementById("fastDrive").checked,	
			"Mobility? (0-10)": document.getElementById("mobility").value, 
			"Driver Comments": document.getElementById("comment").value, 
			"General Strategy": document.getElementById("genStrat").value
		}
		sendInfo(matchData, false);
	}
	
	function sendCached() {
		keys().then(matchKeys => {
			let matches = []
			for(key in matchKeys) {
				console.log(key, matchKeys[key]);
				get(matchKeys[key]).then(val => {
					sendInfo(val, true);
					matches.push(JSON.stringify(val));});
			}
			alert("All matches have been uploaded. Clearing local cache.");
			clear();
			//need to fix mobile css
			//let c = document.getElementById('canvas');
			//c.style.display = "block";
			//QRCode.toCanvas(c, '{"Timestamp ID":1607118789248,"Match #":"1","Side":"BLUE","Name":"wpi","Robot":24,"Balls Scored (Auto)":"1","Goals Scored (Auto)":"1","Rows Scored (Auto)":"0","Balls Scored (Teleop)":"-2","Goals Scored (Teleop)":"-1","Rows Scored (Teleop)":"1","Cycle Speed":"HIGH","Fast Drive?":true,"Mobility? (0-10)":"8","Driver Comments":"lkjkdsflkjcxlkjlkcmxkjnkjhclkmlkxjd","General Strategy":"Strategy 1"}', function (error) {if (error) console.error(error)});
		});
	}
	
	function sendInfo(data, cached) {
		// variable to hold request
		var request;
		// abort any pending request
		if (request) {
			request.abort();
		}
		// fire off the request to /form.php
		request = $.ajax({
			url: "https://script.google.com/macros/s/AKfycbz3Q1ldmmdkAnNchrhfD450tpyloXky4N5wuf4ELTRk5UhTiDQ/exec",
			type: "post",
			data: data
		});
				
		// callback handler that will be called on failure
		request.fail(function (jqXHR, textStatus, errorThrown){
			// log the error to the console
			set(data["Timestamp ID"], data).then(() =>
			alert("Either there's no internet or something went wrong, match stored locally. You can upload stored matches with the Send cached data button."));
		});
		request.done(function (response, textStatus, jqXHR){
			// Log a message to the console
			if(!cached) {alert("Success!");}
		});
		// prevent default posting of form
		event.preventDefault();
	}
	
	$(".sideToggle").click(function() {
		if ($(this).css('background-color')=='rgb(172, 43, 55)') {
			$(this).css('background-color', '#4d4dff');
			$(this).css('border-color', '#8080ff');
			$(this).text("Blue");
		} else {
			$(this).css('background-color', '#AC2B37');
			$(this).css('border-color', '#cc3342');
			$(this).text("Red");
		}
   });
   
   $(".robotToggle").click(function() {
		if ($(this).css('background-color')=="rgb(255, 195, 0)") {
			$(this).css('background-color', '#ff8000');
			$(this).css('border-color', '#ff8000');
			$(this).text("24 inch");
		} else {
			$(this).css('background-color', '#FFC300');
			$(this).css('border-color', '#FFC300');
			$(this).text("15 inch");
		}
	});
   
   $(".cycleToggle").click(function() {
		console.log($(this).css('background-color'));
		if ($(this).css('background-color')=='rgb(0, 128, 0)') {
			$(this).css('background-color', '#FF0000');
			$(this).css('border-color', '#ff3333');
			$(this).text("Low cycle speed");
		} else {
			$(this).css('background-color', '#008000');
			$(this).css('border-color', '#00b300');
			$(this).text("High cycle speed");
	   }
	});
</script>

</body>
</html>
